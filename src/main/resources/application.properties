# Nome da Aplicação
spring.application.name=smpp

# ==================================
# ==== CONFIGURAÇÃO DO BANCO DE DADOS (DATASOURCE) ====
# ==================================
# URL de conexão com o PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/smpp
# Usuário e senha do banco de dados (OK para dev, usar variáveis de ambiente em produção)
spring.datasource.username=postgres
spring.datasource.password=123
# Driver JDBC
spring.datasource.driver-class-name=org.postgresql.Driver

# ==================================
# ==== CONFIGURAÇÃO JPA / HIBERNATE ====
# ==================================
# Estratégia de geração de schema (use 'update' em dev, 'validate' ou 'none' em prod)
spring.jpa.hibernate.ddl-auto=update
# Dialeto específico para PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Mostra o SQL gerado no console durante o desenvolvimento
spring.jpa.show-sql=true
# Formata o SQL exibido para melhor legibilidade
spring.jpa.properties.hibernate.format_sql=true

# ==================================
# ==== CONFIGURAÇÕES DE CONEXÃO E ENCODING ====
# ==================================
# Garante que a conexão com o banco use UTF-8
spring.datasource.hikari.connection-init-sql=SET NAMES 'UTF8'
# Define o timezone padrão para UTC, evitando problemas com datas
spring.jackson.time-zone=UTC

# ==================================
# ==== CONFIGURAÇÃO DE LOG ====
# ==================================
# Nível de log para ver as queries SQL executadas pelo Hibernate
logging.level.org.hibernate.SQL=DEBUG
# Nível de log para ver os parâmetros (valores) passados para as queries
logging.level.org.hibernate.type.descriptor.sql=TRACE
# Nível de log para ver detalhes do processo de segurança
logging.level.org.springframework.security=DEBUG

# ==================================
# ==== CONFIGURAÇÕES DA APLICAÇÃO ====
# ==================================
# Segredo para assinar os tokens JWT (usar variável de ambiente em produção)
jwt.secret=w8K9s#vG2p@Lm!qXz3Eu^RtN4Yb7ZjFs
# Diretório para salvar os arquivos de upload
app.upload.dir=uploads

# ==================================
# ==== CONFIGURAÇÃO DO ACTUATOR ====
# ==================================
# Define quais endpoints serão expostos via web.
# 'health' mostra a saúde da aplicação, 'info' mostra informações customizadas.
# Use '*' para expor todos, mas tenha cuidado em produção.
management.endpoints.web.exposure.include=health,info

# Configura o endpoint de saúde (/actuator/health) para sempre mostrar detalhes completos,
# como o estado da conexão com o banco de dados.
management.endpoint.health.show-details=always

# Você pode adicionar informações customizadas que aparecerão no endpoint /actuator/info
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
